#!/usr/bin/env python
# -*- coding: utf-8 -*-

import argparse
import os
import sys
import numpy as np
import tifffile

def main(arg):
    parser = argparse.ArgumentParser()
    parser.add_argument("file")
    args = parser.parse_args()

    a = np.load(args.file)
    print('Here are the keys in {}. Which one do you want to open?'.format(args.file))
    print(list(a.keys()))
    key = input()
    dset = a[key]
    print('The shape of the selected array is {}. Enter the indices for the slice that you want to dump. Separate '
          'axes by comma and start/end within an axis by colon. To slice an entire axis, leave it blank or just put '
          'a colon. '.format(dset.shape))
    slicers = []
    slicer_input = input()
    print(slicer_input)
    slicer_all_axes = [x for x in slicer_input.split(',')]
    print(slicer_all_axes)
    for slicer in slicer_all_axes:
        if len(slicer) == 0 or slicer == ':':
            slicers.append(slice(None))
        elif ':' not in slicer:
            slicers.append(int(slicer))
        else:
            start, end = [int(x) for x in slicer.split(':')]
            slicers.append(slice(start, end))
    data = dset[tuple(slicers)]
    if 'complex' in str(data.dtype):
        complex_input = input('The values are {}. Do you want the (1) magnitude or (2) phase? '.format(str(data.dtype)))
        if complex_input == 1:
            data = abs(data)
        else:
            data = np.angle(data)
    print('Writing an array of shape {}.'.format(data.shape))
    tifffile.imwrite(os.path.splitext(args.file)[0] + '.tiff', data)


if __name__ == '__main__':
    main(sys.argv)
